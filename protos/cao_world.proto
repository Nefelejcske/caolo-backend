syntax = "proto3";

package cao_world;

import "cao_common.proto";
import "cao_intents.proto";

option go_package = "github.com/caolo-game/cao-rt/cao_world_pb";

message Bounded
{
    int64 value = 1;
    int64 valueMax = 2;
}

message RoomTerrain
{
    cao_common.Axial roomId = 1;
    cao_common.Axial offset = 2;
    /// Returned tiles will have the same positions as in RoomLayout
    repeated Terrain tiles = 3;
}

enum Terrain {
    EMPTY = 0;
    PLAIN = 1;
    WALL = 2;
    BRIDGE = 3;
}

message GetRoomLayoutMsg
{
    int32 radius = 1;
}

message RoomLayout
{
    repeated cao_common.Axial positions = 1;
}

message Room
{
    cao_common.Axial room_id = 1;
    cao_common.Axial offset = 2;
    int32 radius = 3;
    uint64 seed = 4;
}

message RoomList
{
    repeated Room rooms = 1;
}

message Bot
{
    uint64 id = 1;
    // Assume that roomId is part of the context
    cao_common.WorldPosition pos = 2;
    Bounded carry = 3;
    Bounded hp = 4;
    cao_common.Uuid script = 5;
    cao_common.Uuid owner = 6;
    uint32 meleeStrength = 7;
    Decay decay = 8;
    string logs = 9;
    string say = 10;

    cao_intents.MineIntent mineIntent = 11;
    cao_intents.DropoffIntent dropoffIntent = 12;

    message Decay
    {
        int32 hpAmount = 1;
        int32 interval = 2;
        int32 timeRemaining = 3;
    }
}

message Structure
{
    uint64 id = 1;
    // Assume that roomId is part of the context
    cao_common.WorldPosition pos = 2;
    Bounded hp = 3;
    Bounded energy = 4;
    int64 energyRegen = 5;
    cao_common.Uuid owner = 7;

    oneof structure_type
    {
        Spawn spawn = 8;
    }

    message Spawn
    {
        int64 timeToSpawn = 1;
        uint64 spawning = 2;
        repeated uint64 spawnQueue = 3;
    }
}

message Resource
{
    uint64 id = 1;
    // Assume that roomId is part of the context
    cao_common.WorldPosition pos = 2;

    oneof resource_type
    {
        Bounded energy = 3;
    }
}

message DeadEntity
{
    uint64 id = 1;
}

message RoomEntities
{
    int64 worldTime = 1;
    cao_common.Axial roomId = 2;
    repeated Bot bots = 3;
    repeated Structure structures = 4;
    repeated Resource resources = 5;
    repeated DeadEntity deadEntities = 6;
}

service World
{
    /// Stream the entities on updates
    rpc Entities(cao_common.Empty) returns (stream RoomEntities) { }
    rpc GetRoomLayout(GetRoomLayoutMsg) returns (RoomLayout) { }
    rpc GetRoomList(cao_common.Empty) returns (RoomList) { }

    rpc GetRoomTerrain(cao_common.Axial) returns (RoomTerrain) { }
}
